name: NestJS API CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # ─── Build, lint et tests unitaires ──────────────────────────────────────────
  build-and-unit:
    name: Build & Tests Unitaires
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: ⚙️ Setup Node.js (depuis .nvmrc)
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - name: ⚡ Install dependencies
        run: npm ci

      - name: 🔍 Lint
        run: npm run lint

      - name: 📦 Build
        run: npm run build

      - name: 🧪 Tests unitaires
        run: npm test

  # ─── Tests E2E relationnels via Docker Compose ────────────────────────────────
  e2e-relational:
    name: E2E Tests (PostgreSQL)
    runs-on: ubuntu-latest
    needs: build-and-unit

    steps:
      - uses: actions/checkout@v4

      - name: 📁 Lancer les E2E avec Docker Compose
        id: relational
        run: |
          docker compose -f docker-compose.relational.ci.yaml \
                         --env-file env-example-relational \
                         -p ci-relational up --build --exit-code-from api

      - name: Copier prod.log si échec
        if: ${{ failure() && steps.relational.conclusion == 'failure' }}
        run: docker cp ci-relational-api-1:/usr/src/app/prod.log .

      - name: 📤 Upload prod.log (debug)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: prod-logs
          path: prod.log

  # ─── Code Coverage (optionnel) ─────────────────────────────────────────────────
  coverage:
    name: Publier le coverage
    runs-on: ubuntu-latest
    needs: [ build-and-unit, e2e-relational ]
    steps:
      - uses: actions/checkout@v4

      - name: ⚡ Install dependencies
        run: npm ci

      - name: 📊 Générer le coverage report
        run: npm run test -- --coverage --coverageReporters=text-junit

      - name: 🚀 Upload to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: coverage/junit.xml

